{"version":3,"file":"script.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA;AACO;AACP;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9BwC;AACiB;AACnB;AACY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,0BAA0B,iDAAO;AACxC;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,gBAAgB;AAChB;AACA;AACA;AACA,WAAW,qEAAW;AACtB;AACA;AACA,UAAU,MAAM,4DAAmB,aAAa;AAChD;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD,qBAAqB,0CAA0C;AAC/D,oBAAoB,wDAAwD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,sEAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,MAAM;AACN,MAAM,qEAAW;AACjB;AACA;AACA,YAAY,2BAA2B,GAAG;AAC1C;AACA;AACA;AACA;AACA,uDAAuD,MAAM;AAC7D,yCAAyC;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpFsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc,SAAS;AACvB,gBAAgB,2BAA2B;AAC3C;AACA;AACA,uBAAuB,uDAAc;AACrC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAc;AAC5B;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,uBAAuB,uDAAc;AACrC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,mBAAmB,0CAA0C;AAC7D,sBAAsB,sBAAsB,YAAY,oBAAoB;AAC5E;AACA,YAAY,cAAc;AAC1B,cAAc,cAAc;AAC5B;AACA;AACA,CAAQ;AACR;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;UCpEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoD;AACpD;AACA,gBAAgB,qEAAmB","sources":["webpack://kanap/./src/app/Product.mjs","webpack://kanap/./src/app/ProductItem.mjs","webpack://kanap/./src/app/apiInterface.mjs","webpack://kanap/./src/app/config.mjs","webpack://kanap/./src/utility/makeElement.mjs","webpack://kanap/webpack/bootstrap","webpack://kanap/webpack/runtime/define property getters","webpack://kanap/webpack/runtime/hasOwnProperty shorthand","webpack://kanap/webpack/runtime/make namespace object","webpack://kanap/./src/script.js"],"sourcesContent":["/**\r\n * @class Superclass\r\n * @name Product\r\n * @classdesc It sets the properties of the products.\r\n * @property { string } _id The Id of the product\r\n * @property { string } image The URL of the image product\r\n * @property { string } altTxt The alternative text of the image product\r\n * @property { number } price The price of the product\r\n * @property { string } description A description of the product\r\n * @property { string } name Name of the product\r\n */\r\n\r\nexport class Product {\r\n  /**\r\n   * @param { Object } prod The object with the values of the properties.\r\n   */\r\n\r\n  constructor(prod) {\r\n    this._id = prod._id;\r\n\r\n    this.image = prod.image;\r\n\r\n    this.altTxt = prod.altTxt;\r\n\r\n    this.price = +prod.price;\r\n\r\n    this.description = prod.description;\r\n\r\n    this.name = prod.name;\r\n  }\r\n}\r\n","import { Product } from \"./Product.mjs\";\r\nimport { makeElement } from \"../utility/makeElement.mjs\";\r\nimport { CONFIG } from \"./config.mjs\";\r\nimport { apiInterface } from \"./apiInterface.mjs\";\r\n\r\n/**\r\n * @class Subclass from Product - Create an only item of List Product from index page.\r\n * @name ProductItem\r\n * @classdesc Rends the products items to de DOM\r\n */\r\n\r\nexport class ProductItem extends Product {\r\n  /**\r\n   * @param { Object } prod The object with the product properties.\r\n   */\r\n\r\n  constructor(prod) {\r\n    super(prod);\r\n  }\r\n\r\n  /**\r\n   * @method render Create a DOM Element to show de products on the list of index.\r\n   * @param { HTMLElement } container\r\n   * @returns { HTMLElement }\r\n   */\r\n\r\n  render(container) {\r\n    return makeElement(\r\n      [\r\n        \"a\",\r\n        { href: CONFIG.PATH_PRODUCT + this._id },\r\n        [\r\n          \"article\",\r\n          null,\r\n          [\r\n            [\"img\", { src: this.image, alt: this.altTxt }],\r\n            [\"h3\", { class: \"productName\", content: this.name }],\r\n            [\"p\", { class: \"productDescription\", content: this.description }],\r\n          ],\r\n        ],\r\n      ],\r\n      container\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method load Show the list of all products in the home page.\r\n   * @returns { void }\r\n   */\r\n\r\n  static async loadAll(container) {\r\n    try {\r\n      let data = await apiInterface.getProduct();\r\n\r\n      data.forEach((el) => {\r\n        let prodItem = new ProductItem({\r\n          _id: el._id,\r\n          image: el.image,\r\n          altTxt: el.altTxt,\r\n          name: el.name,\r\n          description: el.description,\r\n          price: el.price,\r\n        });\r\n        prodItem.render(container);\r\n      });\r\n    } catch (error) {\r\n      makeElement(\r\n        [\r\n          \"div\",\r\n          { style: \"text-align: center;\" },\r\n          [\r\n            \"p\",\r\n            {\r\n              content: `Desolé, un erreur est survenu. \r\n                  Veuillez réessayer ultérieurement: ${error}`,\r\n              style: \"text-align: center;\",\r\n            },\r\n          ],\r\n        ],\r\n        container\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { CONFIG } from \"./config.mjs\";\r\n\r\n/**\r\n * @Object\r\n * @name apiComunication\r\n * @description Api communication manager.\r\n */\r\n\r\nexport const apiInterface = {\r\n  /**\r\n   * @function getProduct Fetch from API all the products or only one single product.\r\n   * @param { string } id Optional - The Id of the product to fetch. Default is all products.\r\n   * @returns { Array.<object> || object } Return the products or an array of products\r\n   */\r\n  getProduct: async (id = \"\") => {\r\n    return await fetch(CONFIG.API_URL + id).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.status + \": \" + response.statusText);\r\n      } else {\r\n        return response.json().then((data) => {\r\n          let listOfProduct;\r\n          if (Array.isArray(data)) {\r\n            listOfProduct = [];\r\n\r\n            data.forEach((el) => {\r\n              listOfProduct.push({\r\n                _id: el._id,\r\n                image: el.imageUrl,\r\n                altTxt: el.altTxt,\r\n                price: el.price,\r\n                description: el.description,\r\n                name: el.name,\r\n                colors: el.colors,\r\n              });\r\n            });\r\n          } else {\r\n            listOfProduct = {\r\n              _id: data._id,\r\n              image: data.imageUrl,\r\n              altTxt: data.altTxt,\r\n              price: data.price,\r\n              description: data.description,\r\n              name: data.name,\r\n              colors: data.colors,\r\n            };\r\n          }\r\n          return listOfProduct;\r\n        });\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @method getSomeProducts Returns an array of several products\r\n   * determinated by the ID's list.\r\n   * @param { array.<string> } idList the id of the products to request\r\n   * @returns { array.<object> } returns a list of products objects\r\n   */\r\n\r\n  getSomeProducts: async (idList) => {\r\n    let myGetList = [];\r\n    for (let i in idList) {\r\n      myGetList.push(\r\n        fetch(CONFIG.API_URL + idList[i]).then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(response.status + \": \" + response.statusText);\r\n          } else {\r\n            return response.json();\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    return Promise.all(myGetList)\r\n      .then((data) => {\r\n        let listOfProduct = [];\r\n        data.forEach((el) => {\r\n          listOfProduct.push({\r\n            _id: el._id,\r\n            image: el.imageUrl,\r\n            altTxt: el.altTxt,\r\n            price: el.price,\r\n            description: el.description,\r\n            name: el.name,\r\n            colors: el.colors,\r\n          });\r\n        });\r\n        return listOfProduct;\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(err);\r\n      });\r\n  },\r\n\r\n  /**\r\n   * @function sendOrder Send the command order of products.\r\n   * @param myCommand Object {contact:Array.<string>, list:Array.<string>}\r\n   * @returns { string}  returns the command number.\r\n   */\r\n\r\n  sendOrder: async (myCommand) => {\r\n    return await fetch(CONFIG.API_URL + \"order\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(myCommand),\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.status + \": \" + response.statusText);\r\n      } else {\r\n        return response.json().then((data) => {\r\n          return data.orderId;\r\n        });\r\n      }\r\n    });\r\n  },\r\n};\r\n","/* Configuration Data */\r\n/**\r\n * @Object\r\n * @name CONFIG\r\n * @Description Sets de main parameters for all the website.\r\n */\r\n\r\nexport const CONFIG = {\r\n  API_URL: \"http://localhost:3000/api/products/\",\r\n\r\n  PATH_NAME_COMMAND: \"/front/html/confirmation.html\",\r\n\r\n  PATH_PRODUCT: \"./product.html?id=\",\r\n\r\n  LOCAL_CART: \"Kanap\",\r\n};\r\n","/**\r\n * @function \r\n * @name makeElement\r\n * @description create un HTMLElement with a given template.\r\n * @param { Array.< String, ?Object, ?Array } template The object Template.\r\n * @example ['a', {href: 'http:google.es', content: 'google'},\r\n *              ['p',{content: \"mi parrafo\"}, ['span', {content: 'my child'}]]\r\n *          ]\r\n * @param { HTMLElement } container The container where we append the element.\r\n * @returns { HTMLElement } The new element created with the given template.\r\n */\r\n\r\n export function makeElement ( template, container ) {\r\n\r\n  let myElementCreated = container;\r\n\r\n  // If the third element of the array is only one array, then add [] because the third element is really an array of \r\n  // possible childs.\r\n  // Example: {'p', null, ['span']} => {'p', null, [['span']]}\r\n\r\n  if ( typeof template[ 0 ] === \"string\" ) {\r\n    template = [ template ];\r\n  }\r\n\r\n  let domElement;\r\n\r\n  template.forEach( ( el ) => {\r\n    if ( typeof el[ 0 ] === \"string\") {\r\n      domElement = document.createElement( el[ 0 ] );\r\n      if ( myElementCreated ) {\r\n        myElementCreated.appendChild( domElement );\r\n      } else {\r\n        myElementCreated = domElement;\r\n      }\r\n    }\r\n\r\n    if ( typeof el[ 1 ] == \"object\" ) {\r\n      for (let prop in el[ 1 ]) {\r\n        switch ( prop ) {\r\n\r\n          case \"class\":\r\n            let myListClass = el[ 1 ].class;\r\n            if ( Array.isArray( el[ 1 ].class ) ) {\r\n              myListClass = el[ 1 ].class.join(\",\");\r\n            }\r\n            domElement.classList.add( myListClass );\r\n            break;\r\n\r\n          case \"content\":\r\n            domElement.textContent = el[ 1 ].content;\r\n            break;\r\n\r\n          default:\r\n            domElement.setAttribute(prop, el[ 1 ][ prop ]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if ( Array.isArray( el[ 2 ] ) ) {\r\n      if ( el[ 2 ].length == 1 ) {\r\n        el[ 2 ] = [ el[ 2 ] ];\r\n      }\r\n      makeElement( el[ 2 ], domElement );\r\n    }\r\n\r\n  } );\r\n  return myElementCreated;\r\n}\r\n  ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ProductItem } from \"./app/ProductItem.mjs\";\r\n\r\nwindow.onload = ProductItem.loadAll(document.getElementById(\"items\"));\r\n"],"names":[],"sourceRoot":""}